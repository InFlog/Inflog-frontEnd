[{"/Users/nargess/Documents/GitHub/Inflog-frontEnd/src/reportWebVitals.js":"1","/Users/nargess/Documents/GitHub/Inflog-frontEnd/src/components/Menu.jsx":"2","/Users/nargess/Documents/GitHub/Inflog-frontEnd/src/components/PersonalPageInfluencer.jsx":"3","/Users/nargess/Documents/GitHub/Inflog-frontEnd/src/components/RegisterFormInfluencer.jsx":"4","/Users/nargess/Documents/GitHub/Inflog-frontEnd/src/components/RegisterFormBrand.jsx":"5","/Users/nargess/Documents/GitHub/Inflog-frontEnd/src/components/Onboarding.jsx":"6","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/reportWebVitals.js":"7","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/Menu.jsx":"8","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/ServicesEcommerce.js":"9","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/RegisterFormBrand.jsx":"10","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/Onboarding.jsx":"11","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/actions/app.action.js":"12","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/App.js":"13","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/FeedPage.js":"14","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/InfluencersCategory.js":"15","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/reducers/app.reducers.js":"16","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/LoginForm.jsx":"17","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/search.js":"18","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/UpdateForm.jsx":"19","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/index.js":"20","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/search2.js":"21"},{"size":362,"mtime":1610634253000,"results":"22","hashOfConfig":"23"},{"size":6824,"mtime":1611062151877,"results":"24","hashOfConfig":"23"},{"size":9310,"mtime":1611061947096,"results":"25","hashOfConfig":"23"},{"size":5540,"mtime":1610898441096,"results":"26","hashOfConfig":"23"},{"size":5095,"mtime":1610898441093,"results":"27","hashOfConfig":"23"},{"size":1143,"mtime":1610634253000,"results":"28","hashOfConfig":"23"},{"size":362,"mtime":1611061918000,"results":"29","hashOfConfig":"30"},{"size":6825,"mtime":1611270237254,"results":"31","hashOfConfig":"30"},{"size":15590,"mtime":1611269431086,"results":"32","hashOfConfig":"30"},{"size":5117,"mtime":1611061918000,"results":"33","hashOfConfig":"30"},{"size":1149,"mtime":1611275090924,"results":"34","hashOfConfig":"30"},{"size":165,"mtime":1611061918000,"results":"35","hashOfConfig":"30"},{"size":1683,"mtime":1611274880136,"results":"36","hashOfConfig":"30"},{"size":3825,"mtime":1611276708856,"results":"37","hashOfConfig":"30"},{"size":4596,"mtime":1611270288657,"results":"38","hashOfConfig":"30"},{"size":512,"mtime":1611061918000,"results":"39","hashOfConfig":"30"},{"size":6773,"mtime":1611061918000,"results":"40","hashOfConfig":"30"},{"size":2681,"mtime":1611320751530,"results":"41","hashOfConfig":"30"},{"size":6039,"mtime":1611061918000,"results":"42","hashOfConfig":"30"},{"size":714,"mtime":1611061918000,"results":"43","hashOfConfig":"30"},{"size":1096,"mtime":1611275268233,"results":"44","hashOfConfig":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1flmva9",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1an11g8",{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nargess/Documents/GitHub/Inflog-frontEnd/src/reportWebVitals.js",[],"/Users/nargess/Documents/GitHub/Inflog-frontEnd/src/components/Menu.jsx",["94"],"/Users/nargess/Documents/GitHub/Inflog-frontEnd/src/components/PersonalPageInfluencer.jsx",["95"],"/Users/nargess/Documents/GitHub/Inflog-frontEnd/src/components/RegisterFormInfluencer.jsx",[],"/Users/nargess/Documents/GitHub/Inflog-frontEnd/src/components/RegisterFormBrand.jsx",[],"/Users/nargess/Documents/GitHub/Inflog-frontEnd/src/components/Onboarding.jsx",[],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/reportWebVitals.js",[],["96","97"],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/Menu.jsx",["98"],"import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport  {Link} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>settings</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Sign Out</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n        <Link to=\"/FeedPage\">\n          <IconButton  color=\"inherit\">\n            <HomeOutlinedIcon  />\n          </IconButton>\n        </Link> \n\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Hello, Inflogger\n          </Typography>\n         \n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          \n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/ServicesEcommerce.js",[],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/RegisterFormBrand.jsx",[],["99","100"],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/Onboarding.jsx",[],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/actions/app.action.js",[],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/App.js",[],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/FeedPage.js",["101","102","103","104","105","106","107","108","109","110"],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/InfluencersCategory.js",["111","112","113","114","115"],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/reducers/app.reducers.js",["116"],"import { STORE_USER_DATA } from '../actions/app.action';\n\nconst initialState = {\n    user: false,\n\n};\n\nfunction appReducer(state = initialState, action) {\n    console.warn(\"App reducer invoked with state: \" + JSON.stringify(state) + \" with action \" + JSON.stringify(action));\n\n    switch (action.type) {\n        case STORE_USER_DATA:\n            return {\n                ...state,\n                user: action.user,\n\n            };\n    }\n\n    return {\n        ...initialState\n    };\n}\n\nexport default appReducer;",["117","118"],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/LoginForm.jsx",["119","120","121","122","123","124"],"import React from 'react'\nimport \"../components/style.css\"\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport imge from \"../generalloginImg.png\";\nimport { Link, Router, Route, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions/app.action';\nimport { Alert } from 'react-bootstrap';\n\nclass LoginForm extends React.Component {\n    //connect input to the backend with te schema\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            password: \"\",\n            showButton: false,\n            to: false,\n            showSuccess: false,\n            variant: \"success\",\n            text: '',\n        }\n    }\n    inputUserName = (e) => {\n        const newUsername = e.target.value;\n        this.setState({\n            username: newUsername\n        })\n\n\n\n    }\n    inputPassword = (e) => {\n        const newPassword = e.target.value;\n        this.setState({\n            password: newPassword\n        })\n\n\n    }\n\n\n\n    authentication = async () => {\n        try {\n            const response = await axios.get(`http://localhost:1000/influencer`);\n\n            // POST http://localhost:1000/login\n            // {\n            //     \"username\": this.state.username,\n            //     \"password\": this.state.password\n            // }\n\n            const influencer = response.data;\n            const response2 = await axios.get(`http://localhost:1000/brand`);\n            const brand = response2.data;\n            // console.log(brand);\n            // console.log(influencer);\n\n            // let loggedInUser = influencer.find(influencer => influencer.influencerName === username && influencer.password === password)\n\n            influencer.map(influencer => {\n\n                console.log(\"username: \" + this.state.username + \", password: \" + this.state.password)\n\n                if (influencer.influencerName === this.state.username &&\n                    influencer.password === this.state.password) {\n                    this.setState({\n                        to: \"/personalpageInfluencer\",\n                        text: \"success\",\n                        showSuccess: true,\n                        success: true\n                    }, () => {\n                        const loginInfluencer = influencer;\n                        this.props.actions.storeUserData(loginInfluencer);\n                        this.props.history.push(\"/personalpageInfluencer\")\n                    })\n                    console.log('it works ')\n                }\n\n                if (influencer.influencerName !== this.state.username &&\n                    influencer.password !== this.state.password) {\n                    this.setState({\n                        variant: \"warning\",\n                        text: \"wrong login information\",\n                        showSuccess: true,\n                        success: false\n                    })\n                }\n\n            })\n\n\n            brand.map(brand => {\n                if (brand.brandName === this.state.username &&\n                    brand.password === this.state.password) {\n                    this.setState({\n                        to: \"/personalpageBrand\",\n                        text: \"success\",\n                        showSuccess: true,\n                        success: true\n                    }, () => {\n                        const loginbrand = brand;\n                        this.props.actions.storeUserData(loginbrand);\n                        this.props.history.push(\"/personalpageBrand\")\n                    })\n                    console.log('it works ')\n                }\n\n                if (brand.brandName !== this.state.username &&\n                    brand.password !== this.state.password) {\n                    this.setState({\n                        variant: \"warning\",\n                        text: \"wrong login information\",\n                        showSuccess: true,\n                        success: false\n                    })\n                }\n            })\n\n\n        } catch (err) {\n            console.log('Error: ' + err)\n        }\n        console.log('Hello world')\n    }\n\n    //render frontend components\n    render() {\n\n        // if (this.state.success)\n        //     return <Redirect to=\"/personalpage\" />\n\n        return (\n            <div className=\"container\">\n                <div className=\"left\">\n                    <div className=\"inner\">\n\n                        <div className=\"logo\">Login</div>\n\n\n                        <Form className=\"form-elem\">\n                            <Alert variant={this.state.variant} show={this.state.showSuccess}>\n                                {this.state.text}\n                            </Alert>\n                            <Form.Group controlId=\"formBasicUsername\">\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control type=\"username\" placeholder=\"\"\n                                    value={this.state.username} onChange={this.inputUserName} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"\"\n                                    value={this.state.password} onChange={this.inputPassword} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicCheckbox\">\n                                <Form.Check type=\"checkbox\" label=\"save password\" />\n                            </Form.Group>\n\n\n                            <Button className=\"btn\" variant=\"primary\" onClick={this.authentication}\n                            >\n                                {/* <Link to={this.state.to} disabled={this.state.disabled}> */}\n                                    Login\n                                    {/* </Link> */}\n                            </Button>\n\n\n\n\n\n                            <div className=\"registerLink\">\n                                <a href=\"/\">do not have an account yet? Register</a>\n                            </div>\n\n\n                        </Form>\n                    </div>\n\n                </div>\n\n                <div className=\"right\">\n\n                    <img src={imge} className=\"imge\" alt=\"\" />\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({ applicationState: state });\nconst mapDispatchToProps = dispatch => ({ actions: bindActionCreators(actions, dispatch) });\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/search.js",["125","126"],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/UpdateForm.jsx",[],["127","128"],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/index.js",[],"/Users/nargess/Documents/newGitRepository/Inflog-frontEnd-nargess/src/components/search2.js",[],{"ruleId":"129","severity":1,"message":"130","line":11,"column":8,"nodeType":"131","messageId":"132","endLine":11,"endColumn":16},{"ruleId":"129","severity":1,"message":"133","line":4,"column":70,"nodeType":"131","messageId":"132","endLine":4,"endColumn":77},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"129","severity":1,"message":"130","line":11,"column":8,"nodeType":"131","messageId":"132","endLine":11,"endColumn":16},{"ruleId":"134","replacedBy":"138"},{"ruleId":"136","replacedBy":"139"},{"ruleId":"129","severity":1,"message":"140","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"141","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":18},{"ruleId":"129","severity":1,"message":"142","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":12},{"ruleId":"129","severity":1,"message":"143","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":19},{"ruleId":"129","severity":1,"message":"144","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":19},{"ruleId":"129","severity":1,"message":"145","line":8,"column":8,"nodeType":"131","messageId":"132","endLine":8,"endColumn":17},{"ruleId":"129","severity":1,"message":"146","line":10,"column":8,"nodeType":"131","messageId":"132","endLine":10,"endColumn":12},{"ruleId":"129","severity":1,"message":"147","line":14,"column":8,"nodeType":"131","messageId":"132","endLine":14,"endColumn":17},{"ruleId":"129","severity":1,"message":"148","line":15,"column":8,"nodeType":"131","messageId":"132","endLine":15,"endColumn":13},{"ruleId":"129","severity":1,"message":"149","line":70,"column":7,"nodeType":"131","messageId":"132","endLine":70,"endColumn":12},{"ruleId":"129","severity":1,"message":"150","line":11,"column":3,"nodeType":"131","messageId":"132","endLine":11,"endColumn":16},{"ruleId":"129","severity":1,"message":"151","line":12,"column":3,"nodeType":"131","messageId":"132","endLine":12,"endColumn":13},{"ruleId":"129","severity":1,"message":"152","line":13,"column":3,"nodeType":"131","messageId":"132","endLine":13,"endColumn":14},{"ruleId":"129","severity":1,"message":"153","line":14,"column":3,"nodeType":"131","messageId":"132","endLine":14,"endColumn":19},{"ruleId":"129","severity":1,"message":"154","line":15,"column":3,"nodeType":"131","messageId":"132","endLine":15,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":11,"column":5,"nodeType":"157","messageId":"158","endLine":18,"endColumn":6},{"ruleId":"134","replacedBy":"159"},{"ruleId":"136","replacedBy":"160"},{"ruleId":"129","severity":1,"message":"161","line":6,"column":10,"nodeType":"131","messageId":"132","endLine":6,"endColumn":14},{"ruleId":"129","severity":1,"message":"162","line":6,"column":16,"nodeType":"131","messageId":"132","endLine":6,"endColumn":22},{"ruleId":"129","severity":1,"message":"163","line":6,"column":24,"nodeType":"131","messageId":"132","endLine":6,"endColumn":29},{"ruleId":"129","severity":1,"message":"164","line":6,"column":31,"nodeType":"131","messageId":"132","endLine":6,"endColumn":39},{"ruleId":"165","severity":1,"message":"166","line":65,"column":39,"nodeType":"167","messageId":"168","endLine":65,"endColumn":41},{"ruleId":"165","severity":1,"message":"166","line":97,"column":29,"nodeType":"167","messageId":"168","endLine":97,"endColumn":31},{"ruleId":"129","severity":1,"message":"148","line":80,"column":8,"nodeType":"131","messageId":"132","endLine":80,"endColumn":13},{"ruleId":"129","severity":1,"message":"169","line":83,"column":8,"nodeType":"131","messageId":"132","endLine":83,"endColumn":15},{"ruleId":"134","replacedBy":"170"},{"ruleId":"136","replacedBy":"171"},"no-unused-vars","'MenuIcon' is defined but never used.","Identifier","unusedVar","'CardImg' is defined but never used.","no-native-reassign",["172"],"no-negated-in-lhs",["173"],["172"],["173"],"'Button' is defined but never used.","'CameraIcon' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Grid' is defined but never used.","'Container' is defined but never used.","'axios' is defined but never used.","'cards' is assigned a value but never used.","'MDBCardFooter' is defined but never used.","'MDBTooltip' is defined but never used.","'MDBCarousel' is defined but never used.","'MDBCarouselInner' is defined but never used.","'MDBCarouselItem' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["172"],["173"],"'Link' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'search2' is defined but never used.",["172"],["173"],"no-global-assign","no-unsafe-negation"]